/* tslint:disable */
/* eslint-disable */
/**
 * Layout Dashboard API
 * API for managing dynamic dashboard layouts and components
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChartDataPoint } from './ChartDataPoint';
import {
    ChartDataPointFromJSON,
    ChartDataPointFromJSONTyped,
    ChartDataPointToJSON,
} from './ChartDataPoint';

/**
 * 
 * @export
 * @interface ChartDataset
 */
export interface ChartDataset {
    /**
     * 
     * @type {Array<ChartDataPoint>}
     * @memberof ChartDataset
     */
    data: Array<ChartDataPoint>;
    /**
     * 
     * @type {string}
     * @memberof ChartDataset
     */
    borderColor: string;
}

/**
 * Check if a given object implements the ChartDataset interface.
 */
export function instanceOfChartDataset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "borderColor" in value;

    return isInstance;
}

export function ChartDatasetFromJSON(json: any): ChartDataset {
    return ChartDatasetFromJSONTyped(json, false);
}

export function ChartDatasetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChartDataset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(ChartDataPointFromJSON)),
        'borderColor': json['borderColor'],
    };
}

export function ChartDatasetToJSON(value?: ChartDataset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(ChartDataPointToJSON)),
        'borderColor': value.borderColor,
    };
}

